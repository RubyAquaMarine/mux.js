/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  GNSNftRewardsV6,
  GNSNftRewardsV6Interface,
} from "../../../../thirdparty/gains/contracts/GNSNftRewardsV6";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NumberUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "firstP",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sameBlockP",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolP",
        type: "uint256",
      },
    ],
    name: "PercentagesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bot",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromRound",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toRound",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "PoolTokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "bot",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "id",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "first",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sameBlockCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "TriggerRewarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "id",
        type: "tuple",
      },
    ],
    name: "TriggerUnregistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "id",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bot",
        type: "address",
      },
    ],
    name: "TriggeredFirst",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        indexed: false,
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "id",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bot",
        type: "address",
      },
    ],
    name: "TriggeredSameBlock",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fromRound",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_toRound",
        type: "uint256",
      },
    ],
    name: "claimPoolTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentOrder",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "_id",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "distributeNftReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "firstP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract StorageInterfaceV5",
        name: "_storageT",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_triggerTimeout",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sameBlockLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sameBlockP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_poolP",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "openLimitOrderTypes",
    outputs: [
      {
        internalType: "enum GNSNftRewardsV6.OpenLimitOrderType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roundOrdersToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "roundTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sameBlockLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sameBlockP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "_id",
        type: "tuple",
      },
    ],
    name: "sameBlockTriggers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trader",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_pairIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "enum GNSNftRewardsV6.OpenLimitOrderType",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "setOpenLimitOrderType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "storageT",
    outputs: [
      {
        internalType: "contract StorageInterfaceV5",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "_id",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_bot",
        type: "address",
      },
    ],
    name: "storeFirstToTrigger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "_id",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "_bot",
        type: "address",
      },
    ],
    name: "storeTriggerSameBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "_id",
        type: "tuple",
      },
    ],
    name: "timedOut",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensClaimedTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensToClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "triggerTimeout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "_id",
        type: "tuple",
      },
    ],
    name: "triggered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum StorageInterfaceV5.LimitOrder",
        name: "",
        type: "uint8",
      },
    ],
    name: "triggeredLimits",
    outputs: [
      {
        internalType: "address",
        name: "first",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "block",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "trader",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "pairIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "enum StorageInterfaceV5.LimitOrder",
            name: "order",
            type: "uint8",
          },
        ],
        internalType: "struct GNSNftRewardsV6.TriggeredLimitId",
        name: "_id",
        type: "tuple",
      },
    ],
    name: "unregisterTrigger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_firstP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sameBlockP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_poolP",
        type: "uint256",
      },
    ],
    name: "updatePercentages",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sameBlockLimit",
        type: "uint256",
      },
    ],
    name: "updateSameBlockLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_triggerTimeout",
        type: "uint256",
      },
    ],
    name: "updateTriggerTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class GNSNftRewardsV6__factory {
  static readonly abi = _abi;
  static createInterface(): GNSNftRewardsV6Interface {
    return new utils.Interface(_abi) as GNSNftRewardsV6Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GNSNftRewardsV6 {
    return new Contract(address, _abi, signerOrProvider) as GNSNftRewardsV6;
  }
}
